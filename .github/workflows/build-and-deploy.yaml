name: Build & Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'caddy/**'
      - '.github/workflows/deploy-caddy.yaml'

concurrency: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-environment
        id: setup

      - name: Lint
        run: yarn lint

      - name: Prettier
        run: yarn prettier

      - name: Generate Prisma Schema
        run: yarn prisma generate

      - name: Build
        run: yarn build

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Dependencies Docker image
        uses: docker/build-push-action@v5
        if: steps.setup.outputs.cache-hit != 'true'
        with:
          context: .
          file: docker/Dockerfile.dependencies
          push: true
          tags: |
            ghcr.io/bacali95/dutch-groceries-dependencies:${{ hashFiles('yarn.lock') }}
            ghcr.io/bacali95/dutch-groceries-dependencies:latest

      - name: Save Build Output
        uses: actions/cache/save@v4
        with:
          path: build
          key: ${{ steps.setup.outputs.version }}-${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.event.head_commit.message, 'chore(release):')
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-environment
        id: setup
        with:
          skip-install: 'true'

      - name: Restore Build Output
        uses: actions/cache/restore@v4
        with:
          path: build
          key: ${{ steps.setup.outputs.version }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Server Docker image
        uses: docker/build-push-action@v3
        if: startsWith(github.event.head_commit.message, 'release')
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ghcr.io/bacali95/dutch-groceries-app:${{ steps.setup.outputs.version }}
          build-args: |
            DEPENDENCIES_TAG=${{ hashFiles('yarn.lock') }}

      - name: Install Cloudflare CLI
        run: |
          curl --location --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb 
          sudo dpkg -i cloudflared.deb

      - name: Alter SSH config
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SERVER_PRIVATE_KEY }}" >> ~/.ssh/id_ed25519
          echo "Host dutch-groceries-server
            ProxyCommand cloudflared access ssh --hostname %h
            HostName ${{ secrets.SERVER_HOSTNAME }}
            User ${{ secrets.SERVER_USERNAME }}
          " > ~/.ssh/config
          chmod 400 ~/.ssh/id_ed25519

      - name: Copy Caddy files to the server
        run: |
          ssh dutch-groceries-server -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t << EOF
            mkdir dutch-groceries
            rm -rf dutch-groceries/deploy || true
          EOF
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r deploy dutch-groceries-server:~/dutch-groceries

      - name: Deploy Caddy
        run: |
          ssh dutch-groceries-server -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t << EOF
            cd dutch-groceries

            export APP_DIR=$HOME/dutch-groceries
            export APP_VERSION=${{ steps.setup.outputs.version }}

            export DATABASE_URL=${{ secrets.DATABASE_URL }}

            chmod +x deploy/deploy.sh
            sh deploy/deploy.sh
          EOF
